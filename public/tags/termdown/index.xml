<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>termdown on Do What You Want To Do</title>
    <link>https://example.org/tags/termdown/</link>
    <description>Recent content in termdown on Do What You Want To Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 24 Mar 2019 10:38:28 +0900</lastBuildDate>
    
	<atom:link href="https://example.org/tags/termdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>각종 작업 소요시간 체크용 우분투용 command line stopwatch</title>
      <link>https://example.org/posts/tech/%EC%93%B8%EB%A7%8C%ED%95%9C-ubuntu%EC%9A%A9-command-line-%ED%83%80%EC%9D%B4%EB%A8%B8/</link>
      <pubDate>Sun, 24 Mar 2019 10:38:28 +0900</pubDate>
      
      <guid>https://example.org/posts/tech/%EC%93%B8%EB%A7%8C%ED%95%9C-ubuntu%EC%9A%A9-command-line-%ED%83%80%EC%9D%B4%EB%A8%B8/</guid>
      <description>간단하게 터미널에서 작업 소요 시간을 체크 할 수 있는 방법들을 찾아봤는데
https://superuser.com/questions/611538/is-there-a-way-to-display-a-countdown-or-stopwatch-timer-in-a-terminal
terdon 이라는 분이 알려준 방법은 잘 동작하였지만 https://superuser.com/questions/611538/is-there-a-way-to-display-a-countdown-or-stopwatch-timer-in-a-terminal?answertab=active#tab-top
~/.bashrc 파일에 함수를 추가하고 터미널에서 바로 호출해서 쓰는 방법이라 프로그램 추가 설치가 필요없다는 장점이 있다.
countdown(){ date1=$((`date +%s` + $1)); while [ &amp;quot;$date1&amp;quot; -ge `date +%s` ]; do ## Is this more than 24h away? days=$(($(($(( $date1 - $(date +%s))) * 1 ))/86400)) echo -ne &amp;quot;$days day(s) and $(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r&amp;quot;; sleep 0.</description>
    </item>
    
  </channel>
</rss>